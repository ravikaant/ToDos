{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Downloads/Projects/ToDos/todo_app/src/components/tasks.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nconst MAX_RECORDS_PER_PAGE = 4;\n\nclass Tasks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentPage: 1\n    };\n\n    this.handleClick = number => event => {\n      this.setState({\n        currentPage: number\n      });\n    };\n\n    this.renderTasks = tasks => {\n      return React.createElement(\"ul\", {\n        className: \"tasklist\",\n        id: \"todoList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, tasks.map(task => React.createElement(\"li\", {\n        key: task.id,\n        className: task.status === \"INCOMPLETE\" ? \"task incomplete\" : \"task complete\",\n        onClick: () => this.props.toggleTask(task),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, task.name), React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: ev => this.props.onDelete(task.id, ev),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"X\"))));\n    };\n  }\n\n  getFilteredTasks() {\n    switch (this.props.view) {\n      case \"COMPLETE\":\n        return this.props.tasks.filter(v => v.status === \"COMPLETE\");\n\n      case \"INCOMPLETE\":\n        return this.props.tasks.filter(v => v.status === \"INCOMPLETE\");\n\n      default:\n        return this.props.tasks;\n    }\n  }\n\n  getTasksForPage(filteredTasks, pagno) {\n    const indexOfLastTask = this.state.currentPage * MAX_RECORDS_PER_PAGE;\n    const indexOfFirstTask = indexOfLastTask - MAX_RECORDS_PER_PAGE;\n    return filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\n  }\n\n  render() {\n    const filteredTasks = this.getFilteredTasks();\n    const currentTasks = this.getTasksForPage(filteredTasks, this.state.currentPage);\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalTasks / maxRecordsPerPage); i++) {\n      console.log(i);\n      pageNumbers.push(i);\n    }\n\n    const renderPages = React.createElement(\"ul\", {\n      className: \"page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: this.state.currentPage === 1 ? \"disabled pages\" : \"pages\",\n      onClick: ev => {\n        console.log(ev.target.className);\n        ev.target.className !== \"disabled pages\" && this.setState({\n          currentPage: this.state.currentPage - 1\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Prev\"), pageNumbers.map(number => React.createElement(\"li\", {\n      className: \"pages\",\n      key: number,\n      id: number,\n      onClick: this.handleClick(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, number)), React.createElement(\"li\", {\n      className: \"pages\",\n      onClick: () => {\n        this.setState({\n          currentPage: this.state.currentPage + 1\n        });\n        console.log(this.state.currentPage);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Next\"));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, renderTasks(getTasksForPage(filteredTasks, this.state.currentPage)), renderPages);\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/administrator/Downloads/Projects/ToDos/todo_app/src/components/tasks.jsx"],"names":["React","Component","MAX_RECORDS_PER_PAGE","Tasks","state","currentPage","handleClick","number","event","setState","renderTasks","tasks","map","task","id","status","props","toggleTask","name","ev","onDelete","getFilteredTasks","view","filter","v","getTasksForPage","filteredTasks","pagno","indexOfLastTask","indexOfFirstTask","slice","render","currentTasks","pageNumbers","i","Math","ceil","totalTasks","maxRecordsPerPage","console","log","push","renderPages","target","className"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\n\nconst MAX_RECORDS_PER_PAGE = 4;\nclass Tasks extends Component {\n    state = {\n        currentPage: 1\n    };\n\n    handleClick = number => event => {\n        this.setState({ currentPage: number });\n    };\n\n    getFilteredTasks() {\n        switch (this.props.view) {\n            case \"COMPLETE\":\n                return this.props.tasks.filter(v => v.status === \"COMPLETE\");\n            case \"INCOMPLETE\":\n                return this.props.tasks.filter(v => v.status === \"INCOMPLETE\");\n            default:\n                return this.props.tasks;\n        }\n    }\n    getTasksForPage(filteredTasks, pagno) {\n        const indexOfLastTask = this.state.currentPage * MAX_RECORDS_PER_PAGE;\n        const indexOfFirstTask = indexOfLastTask - MAX_RECORDS_PER_PAGE;\n        return filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\n    }\n\n    renderTasks = tasks => {\n        return (\n            <ul className=\"tasklist\" id=\"todoList\">\n                {tasks.map(task => (\n                    <li\n                        key={task.id}\n                        className={\n                            task.status === \"INCOMPLETE\"\n                                ? \"task incomplete\"\n                                : \"task complete\"\n                        }\n                        onClick={() => this.props.toggleTask(task)}\n                    >\n                        <div className=\"todoContainer\">{task.name}</div>\n\n                        <button\n                            className=\"delete\"\n                            onClick={ev => this.props.onDelete(task.id, ev)}\n                        >\n                            X\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        );\n    };\n\n    render() {\n        const filteredTasks = this.getFilteredTasks();\n        const currentTasks = this.getTasksForPage(\n            filteredTasks,\n            this.state.currentPage\n        );\n        const pageNumbers = [];\n\n        for (let i = 1; i <= Math.ceil(totalTasks / maxRecordsPerPage); i++) {\n            console.log(i);\n            pageNumbers.push(i);\n        }\n        const renderPages = (\n            <ul className=\"page-numbers\">\n                <li\n                    className={\n                        this.state.currentPage === 1\n                            ? \"disabled pages\"\n                            : \"pages\"\n                    }\n                    onClick={ev => {\n                        console.log(ev.target.className);\n                        ev.target.className !== \"disabled pages\" &&\n                            this.setState({\n                                currentPage: this.state.currentPage - 1\n                            });\n                    }}\n                >\n                    Prev\n                </li>\n                {pageNumbers.map(number => (\n                    <li\n                        className=\"pages\"\n                        key={number}\n                        id={number}\n                        onClick={this.handleClick(number)}\n                    >\n                        {number}\n                    </li>\n                ))}\n                <li\n                    className=\"pages\"\n                    onClick={() => {\n                        this.setState({\n                            currentPage: this.state.currentPage + 1\n                        });\n                        console.log(this.state.currentPage);\n                    }}\n                >\n                    Next\n                </li>\n            </ul>\n        );\n\n        return (\n            <React.Fragment>\n                {renderTasks(\n                    getTasksForPage(filteredTasks, this.state.currentPage)\n                )}\n                {renderPages}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}